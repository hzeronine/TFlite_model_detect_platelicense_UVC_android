import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: "com.android.library"
apply plugin: 'org.jetbrains.kotlin.android'
group = 'com.gitee.yunianvh'

android {
    compileSdk 33

    defaultConfig {
        minSdkVersion 29
        targetSdkVersion 33
        ndkVersion("26.2.11394342")
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
        }
    }

    android.libraryVariants.all {
        variant ->
            variant.outputs.all {
                def fileName = "libusbcamera-1.2.5.aar"
                outputFileName = fileName
            }
    }

    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging = false
        }
    }
    namespace 'com.yunianvh.libusbcamera'
}

//WINDOWS本地编译不通过时，可以用task ndkBuild来编译
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn ndkBuild
//}
//
//String getNdkBuildPath() {
//    Properties properties = new Properties()
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//    def ndkBuildingDir = properties.getProperty("ndk.dir")
//    def ndkBuildPath = ndkBuildingDir
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        ndkBuildPath = ndkBuildingDir + '/ndk-build.cmd'
//    } else {
//        ndkBuildPath = ndkBuildingDir + '/ndk-build'
//    }
//    return ndkBuildPath
//}
//
//task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
//    println('executing ndkBuild')
//    def ndkBuildPath = getNdkBuildPath();
//    commandLine ndkBuildPath, '-j8', '-C', file('src/main').absolutePath
//    outputs.dir(file('src/main/libs'))
//}
//
//task ndkClean(type: Exec, description: 'clean JNI libraries') {
//    println('executing ndkBuild clean')
//    def ndkBuildPath = getNdkBuildPath();
//    commandLine ndkBuildPath, 'clean', '-C', file('src/main').absolutePath
//}
//
//clean.dependsOn 'ndkClean'

repositories {
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    testImplementation 'junit:junit:4.12'
    implementation("com.gitee.yunianvh:rtsp-rtmp-stream-demo:usb-stream-1.3.21")
    implementation 'androidx.core:core-ktx:+'
}
